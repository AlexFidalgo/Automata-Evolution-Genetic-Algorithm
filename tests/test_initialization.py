import matplotlib.pyplot as plt
from collections import Counter
import os
import sys
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))
from initialization import *

def plot_get_uniformly_distributed_ic(num_iterations, N, predominant_color=None):
    """
    Plot the densities of initial configurations generated by get_uniformly_distributed_ic.

    Parameters:
    - num_iterations (int): Number of iterations to generate initial configurations.
    - N (int): The size of the configuration.
    - predominant_color (str): If 'black', ensures more black cells; if 'white', ensures more white cells.
    """
    densities = []

    for _ in range(num_iterations):
        initial_config = get_uniformly_distributed_ic(N, predominant_color)
        density = sum(initial_config) / N
        densities.append(density)
        # print(initial_config)

    count_dict = Counter(densities)
    for value in sorted(count_dict.keys()):
        print(f"{value}: {count_dict[value]} times")

    # bins= [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
    # plt.hist(densities, bins=10, color='blue', edgecolor='black')
    # plt.title('Density Distribution of Initial Configurations')
    # plt.xlabel('Density')
    # plt.ylabel('Frequency')
    # plt.show()

num_iterations = 10000
N = 10
predominant_color = None
plot_get_uniformly_distributed_ic(num_iterations, N, predominant_color)